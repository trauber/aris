!!! strict
%html
  %head
    %title= title = "aris"
    %script{:type=>'text/javascript',:src=>'https://github.com/janl/mustache.js/raw/master/mustache.js'}
    :javascript
      // a string helper
      function trim(stringToTrim) {
        return stringToTrim.replace(/^\s+|\s+$/g,"");
      }
    
      function convert() {
        var view = [];
        view.ymd = "///";
        var tastring = document.forms.daform.ws.value;
        document.forms.daform.ws.value = '';
        mysplit = tastring.split('\n');
        for(i=0; i < mysplit.length; i++) {
          var label = mysplit[i].substring(0,2);
          var field = mysplit[i].substring(6);
          switch(label) {
            case  "TY": view.type = field.trim(); break;
            case "A1": if (view.auth) { break; } else { view.auth = field.trim(); } break;
            case "AU": if (view.auth) { break; } else { view.auth = field.trim(); } break;
            case "T1": view.title = field.trim(); break;
            case "TI": view.title = field.trim(); break;
            case "JF": view.journal = field.trim(); break;
            case "JO": if (view.journal) { break; } else { view.journal = field.trim(); } break;
            case "SP": view.sp = field.trim(); break;
            case "EP": view.ep = field.trim(); break;
            case "VL": view.vl = field.trim(); break;
            case "IS": view.is = field.trim(); break;
            case "DO": view.doi = field.trim(); break;
            case "SN": view.sn = field.trim(); break;
            case "UR": view.url = field.trim(); break;
            case "ID": view.oclc = field.trim(); break;
            case "DB": view.db = field.trim(); break;
            case "PB": view.pb = field.trim(); break;
            case "CY": view.city = field.trim(); break;
            case "Y1": view.ymd = field.trim().replace(/-/g,"/"); break;
            case "YR": view.ymd = field.trim().replace(/-/g,"/"); break;
            case "PY": view.ymd = field.trim().replace(/-/g,"/"); break;
          }
        }
        var ymdsplit = [];
        var ymdsplit = view.ymd.split("/");
        var months = {
          "": " ", "01": "January", "02": "February", "03": "March", "04": "April",
          "05": "May", "06": "June", "07": "July", "08": "August", "09":
          "September", "10": "October", "11": "November", "12": "December"
        }
        view.year =  ymdsplit[0];
        view.month  =  months[ymdsplit[1]];
        var jtemplate = "IfWinExist Item\n{\n  WinActivate\n}\nelse\n{\n  Exit\n}\n"+
          "SendInput {Raw}{{{journal}}}\n"+
          "SendInput {tab}{Raw}{{{vl}}}\n"+
          "SendInput {tab}{Raw}{{{is}}}\n"+
          "SendInput {tab}{Raw}{{{month}}}\n"+
          "SendInput {tab}{Raw}{{{year}}}\n"+
          "SendInput {tab}{Raw}{{sp}}-{{ep}}\n"+
          "SendInput {tab}{Raw}{{{title}}}\n"+
          "SendInput {tab}{Raw}{{{auth}}}\n"+
          "SendInput {tab 8}{Space}\n"+
          "SendInput {tab 7}{Raw}Not a loan\n"+
          "SendInput {tab}{Raw}Web Page Link\n"+
          "SendInput {tab}{Raw}Article\n"+
          "SendInput {tab}{Raw}Factual\n"+
          "SendInput {tab}{Raw}{{{url}}}\n"+
          "SendInput {tab 3}{Raw}{{{sn}}}\n"+
          "SendInput {tab}{Raw}\n"+
          "SendInput {tab 2}{Raw}\n";
        var btemplate = "IfWinExist Item\n{\n  WinActivate\n}\nelse\n{\n  Exit\n}\n"+
          "SendInput {Raw}{{{title}}}\n"+
          "SendInput {tab}{Raw}{{{auth}}}\n"+
          "SendInput {tab 2}{Raw}\n"+
          "SendInput {tab}{Raw}{{{pb}}}\n"+
          "SendInput {tab}{Raw}{{{year}}}\n"+
          "SendInput {tab}{Raw}{{{city}}}\n"+
          "SendInput {tab}{Raw}\n"+
          "SendInput {tab 13}{Raw}24 Hours\n"+
          "SendInput {tab}{Raw}Hard Copy Reserve Item\n"+
          "SendInput {tab}{Raw}Book\n"+
          "SendInput {tab}{Raw}\n"+
          "SendInput {tab}{Raw}{{{url}}}\n"+
          "SendInput {tab 3}{Raw}{{{sn}}}\n"+
          "SendInput {tab 2}{Raw}{{{oclc}}}\n"+
          "SendInput {tab}{Raw}\n";
        if (view.type == "JOUR") {
          //alert(Mustache.to_html(jtemplate, view));
          document.forms.daform.ws.value = Mustache.to_html(jtemplate, view);
          document.forms.daform.ws.focus();
        } else if (view.type == "BOOK") {
          document.forms.daform.ws.value = Mustache.to_html(btemplate, view);
          document.forms.daform.ws.focus();
        } else {
          document.forms.daform.ws.value = "UNRECOGNIZED RECORD TYPE";
          document.forms.daform.ws.focus();
        }
      }
  %body
    <a href="http://github.com/trauber"><img
    style="position: absolute; top: 0; right: 0; border: 0;"
    src="https://d3nwyuy0nl342s.cloudfront.net/img/71eeaab9d563c2b3c590319b398dd35683265e85/687474703a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67"
    alt="Fork me on GitHub"></a>

    %h1= title
    %form{:name=>'daform'}
      %input{:type=>'button',:onClick=>'convert();',:value=>'Convert RIS to AutoHotkey for Ares template'}
      %br
      %br
      %textarea{:name=>'ws', :cols=>'80',:rows=>'30',:wrap=>'off'}
    :javascript
      document.forms.daform.ws.focus();

